branch 분기점
	원본을 기반으로 분리하여 작업할수있도록 도와줌
	항상 안정된 코드를 유지함과 더불어 실험적인 작업을 시도가능
	일종의 가상 폴더
	default : master branch
	
commit dd0934fa298f9cc7c44ee6029d35d312758f0180 (HEAD -> master)
	HEAD 가장 마지막에 commit된 상태를 가리키는 지시자(저장공간)
	새롭게 커밋이 되거나 수정,변경이 될때 head가 알고있는 커밋을보고 비교하면 속도가 빠르기 때문

<git local branch 만들기>
	git branch 브랜치이름 커밋ID
		커밋ID 생략하면 마지막 커밋(head)기점으로 새로운 브랜치가 생성
		브랜치이름은
		- . 으로 시작할 수 없고 특수문자 X 이미 존재하는 브랜치 이름도 불가능
		git-flow 기법을 참고하여 브랜치이름을 짓는것도좋다

	git branch 
		만들어진 branch 확인, 이름만 보이며, *표시가 있는 브랜치가 현재 내가 위치한 브랜치
	git rev-parse header 
		branch ID 확인가능
	git branch -v 
		이걸로 조금더 자세하게 볼 수 있다. 브랜치명, 기준커밋, 커밋메세지
	git checkout 이동할브랜치
		이동할브랜치에 -로 적으면 이전 브랜치를 의미.
		해당 브랜치로 이동하며, commit 이 완료되지 않으면(stage에 남아있다면) 다른 브랜치로 이동 불가
		-b 옵션
			브랜치 생성과 이동을 동시에
			git checkout -b 브랜치명
		

github 의 기본 브랜치 이름은 main

git branch -M main 
	내가 현재 위치한 branch 이름을 main으로 수정해줘
	보통은 master -> main 수정하여 사용한다.

원격저장소로 local branch 전송하기
 	git push -u 원격저장소별칭(origin) 브랜치이름
	
git remote show 원격저장소별칭
	원격저장소 브랜치와 로컬브랜치 정보확인

git push origin 브랜치이름:원격저장소브랜치이름
	로컬브랜치와 원격저장소 브랜치가 서로 같다면 push,pull 할때 생략할수있지만 이름이 다르면
		git push 원격저장소별칭 원격저장소브랜치명
	이렇게 써야함.

git remote show 원격저장소별칭
	해당원격저장소와 로컬저장소브랜치 정보 확인
git branch -r
	원격저장소 브랜치 확인
git branch -a 
	원격저장소, 로컬저장소 브랜치 확인
git branch -vv
	연결된 브랜치 정보 확인

<깃허브에 새롭게 만들어진 브랜치를 로컬에 추가하는 방법>
	git branch 브랜치이름 원격저장소별칭/브랜치이름


	
	
	
	
		